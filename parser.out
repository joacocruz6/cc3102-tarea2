Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> empty
Rule 1     empty -> <empty>
Rule 2     program -> program program
Rule 3     program -> conditional
Rule 4     program -> loop
Rule 5     program -> variables NEXTINST
Rule 6     program -> input NEXTINST
Rule 7     program -> show NEXTINST
Rule 8     variables -> NAME ASSIGN expression
Rule 9     conditional -> IF LEFTBRACKET expression RIGHTBRACKET THEN WLEFTBRACKET program WRIGHTBRACKET
Rule 10    conditional -> IF LEFTBRACKET expression RIGHTBRACKET THEN WLEFTBRACKET program WRIGHTBRACKET ELSE WLEFTBRACKET program WRIGHTBRACKET
Rule 11    loop -> WHILE LEFTBRACKET expression RIGHTBRACKET DO WLEFTBRACKET program WRIGHTBRACKET
Rule 12    show -> PRINT LEFTBRACKET expression RIGHTBRACKET
Rule 13    input -> NAME EQUALS READ LEFTBRACKET RIGHTBRACKET
Rule 14    expression -> INT
Rule 15    expression -> expression PLUS expression
Rule 16    expression -> expression MINUS expression
Rule 17    expression -> expression MULTIPLY expression
Rule 18    expression -> expression DIVIDE expression
Rule 19    expression -> expression EQUALS expression
Rule 20    expression -> expression LOWER expression
Rule 21    expression -> expression GREATER expression
Rule 22    expression -> expression NOTEQ expression
Rule 23    expression -> expression LOWEREQ expression
Rule 24    expression -> expression GREATEREQ expression
Rule 25    expression -> LEFTBRACKET expression RIGHTBRACKET
Rule 26    expression -> MINUS expression
Rule 27    expression -> NAME

Terminals, with rules where they appear

ASSIGN               : 8
DIVIDE               : 18
DO                   : 11
ELSE                 : 10
EQUALS               : 13 19
GREATER              : 21
GREATEREQ            : 24
IF                   : 9 10
INT                  : 14
LEFTBRACKET          : 9 10 11 12 13 25
LOWER                : 20
LOWEREQ              : 23
MINUS                : 16 26
MULTIPLY             : 17
NAME                 : 8 13 27
NEXTINST             : 5 6 7
NOTEQ                : 22
PLUS                 : 15
PRINT                : 12
READ                 : 13
RIGHTBRACKET         : 9 10 11 12 13 25
THEN                 : 9 10
WHILE                : 11
WLEFTBRACKET         : 9 10 10 11
WRIGHTBRACKET        : 9 10 10 11
error                : 

Nonterminals, with rules where they appear

conditional          : 3
empty                : 0
expression           : 8 9 10 11 12 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 26
input                : 6
loop                 : 4
program              : 2 2 9 10 10 11
show                 : 7
variables            : 5

Parsing method: LALR

state 0

    (0) S' -> . empty
    (1) empty -> .

    $end            reduce using rule 1 (empty -> .)

    empty                          shift and go to state 1

state 1

    (0) S' -> empty .


